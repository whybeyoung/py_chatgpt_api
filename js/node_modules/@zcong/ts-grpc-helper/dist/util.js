"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setTimeoutHeader = exports.setDeadlineHeader = void 0;
const GRPC_TIMEOUT_HEADER = 'grpc-timeout';
const maxTimeoutValue = 100000000 - 1;
const units = [
    ['m', 1],
    ['S', 1000],
    ['M', 60 * 1000],
    ['H', 60 * 60 * 1000],
];
const getDeadline = (deadline) => {
    const deadlineTime = deadline instanceof Date ? deadline.getTime() : deadline;
    const now = new Date().getTime();
    const timeoutMs = Math.max(deadlineTime - now, 0);
    for (const [unit, factor] of units) {
        const amount = timeoutMs / factor;
        if (amount <= maxTimeoutValue) {
            return String(Math.ceil(amount)) + unit;
        }
    }
    throw new Error('Deadline is too far in the future');
};
const setDeadlineHeader = (md, deadline) => {
    md.set(GRPC_TIMEOUT_HEADER, getDeadline(deadline));
};
exports.setDeadlineHeader = setDeadlineHeader;
const setTimeoutHeader = (md, timeoutMs) => {
    const deadline = new Date().getTime() + timeoutMs;
    md.set(GRPC_TIMEOUT_HEADER, getDeadline(deadline));
};
exports.setTimeoutHeader = setTimeoutHeader;
//# sourceMappingURL=util.js.map